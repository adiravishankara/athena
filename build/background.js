console.log("Background script loaded");function p(t){chrome.tabs.get(t,n=>{const r=n.url;if(!r||r.startsWith("chrome://")||r.startsWith("chrome-extension://")||r.startsWith("edge://")||r.startsWith("about:")){console.log("Cannot inject script into",r);return}chrome.storage.local.get(["currentNotebook","notebooks"],o=>{const i=o.currentNotebook,a=o.notebooks||{};let m=!1;i&&a[i]&&Object.values(a[i]).forEach(l=>{l.url===r&&(m=!0)}),chrome.scripting.executeScript({target:{tabId:t},function:l=>{if(document.getElementById("athena-floating-button"))return;const e=document.createElement("div");e.id="athena-floating-button",e.innerHTML=l?"✓":"+",e.style.position="fixed !important",e.style.bottom="50% !important",e.style.right="20px !important",e.style.transform="translateY(50%) !important",e.style.background=l?"#2e7d32 !important":"#004d40 !important",e.style.color="white !important",e.style.width="40px !important",e.style.height="40px !important",e.style.padding="0 !important",e.style.borderRadius="50% !important",e.style.fontSize="24px !important",e.style.fontWeight="bold !important",e.style.cursor="pointer !important",e.style.zIndex="2147483647 !important",e.style.boxShadow="0 4px 8px rgba(0,0,0,0.4) !important",e.style.display="flex !important",e.style.justifyContent="center !important",e.style.alignItems="center !important",e.style.lineHeight="40px !important",e.style.textAlign="center !important",e.style.fontFamily="Arial, sans-serif !important",e.style.border="none !important",e.style.margin="0 !important",e.style.userSelect="none !important";let g=!1,f,b;e.addEventListener("mousedown",function(u){g=!0,f=u.clientX-e.getBoundingClientRect().left,b=u.clientY-e.getBoundingClientRect().top}),document.addEventListener("mousemove",function(u){if(g){const d=u.clientX-f,h=u.clientY-b;e.style.right="auto",e.style.bottom="auto",e.style.left=d+"px",e.style.top=h+"px"}}),document.addEventListener("mouseup",function(){g=!1}),e.addEventListener("click",function(u){if(!g){if(l){const s=document.createElement("div");s.textContent="Already added to notebook",s.style.position="fixed",s.style.bottom="100px",s.style.right="20px",s.style.backgroundColor="rgba(46, 125, 50, 0.9)",s.style.color="white",s.style.padding="10px 15px",s.style.borderRadius="4px",s.style.zIndex="10001",document.body.appendChild(s),setTimeout(()=>{s.remove()},2e3);return}const d=window.location.href,h=document.title;chrome.runtime.sendMessage({action:"ADD_SOURCE",url:d,title:h,type:"web",datetime:new Date().toISOString()},s=>{if(s&&s.status==="success")e.style.background="#2e7d32 !important",e.innerHTML="✓",l=!0;else{const c=document.createElement("div");c.textContent=s&&s.error?s.error:"Failed to add to notebook",c.style.position="fixed",c.style.bottom="100px",c.style.right="20px",c.style.backgroundColor="rgba(211, 47, 47, 0.9)",c.style.color="white",c.style.padding="10px 15px",c.style.borderRadius="4px",c.style.zIndex="10001",document.body.appendChild(c),setTimeout(()=>{c.remove()},2e3)}})}}),document.body.appendChild(e),new MutationObserver(u=>{u.forEach(d=>{d.type==="attributes"&&d.attributeName==="style"?(e.style.width="40px !important",e.style.height="40px !important",e.style.fontSize="24px !important",e.style.background=l?"#2e7d32 !important":"#004d40 !important",e.style.zIndex="2147483647 !important"):d.type==="childList"&&d.target===e&&(e.innerHTML=l?"✓":"+")})}).observe(e,{attributes:!0,attributeFilter:["style"],childList:!0})},args:[m]}).catch(l=>{console.error("Script injection error:",l)})})})}function y(t){chrome.scripting.executeScript({target:{tabId:t},function:()=>{const n=document.getElementById("athena-floating-button");n&&n.remove()}}).catch(n=>{console.log("Cannot remove button from this page")})}chrome.runtime.onInstalled.addListener(()=>{console.log("Athena Extension Installed"),chrome.storage.local.get(["notebooks","currentNotebook","researchMode"],t=>{t.notebooks||chrome.storage.local.set({notebooks:{}}),t.currentNotebook||chrome.storage.local.set({currentNotebook:null}),t.researchMode===void 0&&chrome.storage.local.set({researchMode:!1})})});chrome.tabs.onUpdated.addListener((t,n,r)=>{n.status==="complete"&&chrome.storage.local.get(["researchMode"],o=>{(o.researchMode||!1)&&p(t)})});chrome.tabs.onCreated.addListener(t=>{chrome.storage.local.get(["researchMode"],n=>{n.researchMode})});function x(t){return new Promise((n,r)=>{if(!t){r(new Error("Notebook name is required"));return}chrome.storage.local.get(["notebooks"],o=>{const i=o.notebooks||{};if(i[t]){r(new Error(`Notebook "${t}" already exists`));return}i[t]={},chrome.storage.local.set({notebooks:i,currentNotebook:t},()=>{n({name:t,notebook:i[t]})})})})}function k(t,n){return new Promise((r,o)=>{if(!t){o(new Error("Notebook name is required"));return}if(!n||!n.url){o(new Error("Source URL is required"));return}chrome.storage.local.get(["notebooks"],i=>{const a=i.notebooks||{};if(!a[t]){o(new Error(`Notebook "${t}" does not exist`));return}const m=`source_${Date.now()}`;a[t][m]={url:n.url,title:n.title||n.url,type:n.type||"web",added_datetime:n.datetime||new Date().toISOString()},chrome.storage.local.set({notebooks:a},()=>{r({notebookName:t,sourceId:m,source:a[t][m]})})})})}function E(t,n){return new Promise((r,o)=>{if(!t){o(new Error("Notebook name is required"));return}if(!n){o(new Error("Source ID is required"));return}chrome.storage.local.get(["notebooks"],i=>{const a=i.notebooks||{};if(!a[t]){o(new Error(`Notebook "${t}" does not exist`));return}if(!a[t][n]){o(new Error(`Source "${n}" does not exist in notebook "${t}"`));return}delete a[t][n],chrome.storage.local.set({notebooks:a},()=>{r({notebookName:t,sourceId:n})})})})}function w(t){return new Promise((n,r)=>{chrome.storage.local.get(["notebooks"],o=>{const i=o.notebooks||{};if(t&&!i[t]){r(new Error(`Notebook "${t}" does not exist`));return}chrome.storage.local.set({currentNotebook:t},()=>{n({currentNotebook:t})})})})}function C(t){return new Promise(n=>{chrome.storage.local.set({researchMode:t},()=>{t?chrome.tabs.query({},r=>{for(const o of r)p(o.id)}):chrome.tabs.query({},r=>{for(const o of r)y(o.id)}),n({researchMode:t})})})}chrome.runtime.onMessage.addListener((t,n,r)=>{if(console.log("Message received:",t),t.action==="CREATE_NOTEBOOK")return x(t.name).then(o=>r({status:"success",data:o})).catch(o=>r({status:"error",error:o.message})),!0;if(t.action==="ADD_SOURCE")return chrome.storage.local.get(["currentNotebook"],o=>{if(!o.currentNotebook){r({status:"error",error:"No notebook selected"});return}k(o.currentNotebook,{url:t.url,title:t.title,type:t.type,datetime:t.datetime}).then(i=>{console.log("Source added:",i),r({status:"success",data:i})}).catch(i=>{console.error("Error adding source:",i),r({status:"error",error:i.message})})}),!0;if(t.action==="DELETE_SOURCE")return E(t.notebookName,t.sourceId).then(o=>r({status:"success",data:o})).catch(o=>r({status:"error",error:o.message})),!0;if(t.action==="SET_CURRENT_NOTEBOOK")return w(t.name).then(o=>r({status:"success",data:o})).catch(o=>r({status:"error",error:o.message})),!0;if(t.action==="TOGGLE_RESEARCH_MODE")return C(t.enabled).then(o=>r({status:"success",data:o})).catch(o=>r({status:"error",error:o.message})),!0});
